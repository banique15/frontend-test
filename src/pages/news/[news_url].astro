---
import Base from '../../layout/Base.astro';
const title = 'Sing for Hope';
import Editor from '../../components/Editor.jsx';



// Supabase client setup
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZzaXVha29mb2Rna2htY2xmdnBsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTk2NTg5OTgsImV4cCI6MjAxNTIzNDk5OH0.ty_9mqxxjK9itXEBCLrFzgtng1tFQGBMRLSwodeGzVk';

// Function to fetch news item data from Supabase using GraphQL
async function fetchNewsItem(news_url) {
  const query = `
    query GetNewsItemByURL($news_url: String!) {
      newsCollection(filter: {news_url: {eq: $news_url}}) {
        edges {
          node {
            id
            news_title
            news_excerpt
            news_content
            news_image
            news_date
          }
        }
      }
    }
  `;

    const response = await fetch('https://vsiuakofodgkhmclfvpl.supabase.co/graphql/v1', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            "apiKey": supabaseAnonKey
        },
        body: JSON.stringify({
            query,
            variables: { news_url }
        }),
    });

    if (!response.ok) {
        throw new Error(`API request failed with status ${response.status}`);
    }

    const json = await response.json();
    console.log(json); // Log the entire response


    if (!json.data) {
        throw new Error('Response does not contain a data property');
    }

    if (!json.data.newsCollection) {
        throw new Error('Data does not contain a newsCollection property');
    }

    return json.data.newsCollection.edges.length > 0 ? json.data.newsCollection.edges[0].node : null;
}

// Extracting the URL slug from the route
const news_url = Astro.params.news_url;
console.log(Astro.params)

// Fetch the news item data based on the URL slug
const newsItem = await fetchNewsItem(news_url);
console.log(newsItem);
console.log(newsItem.news_content); // Log the content to the console


---

<Base title="{title}">
        <div class="bg-white px-3 py-16 lg:px-8">
          
          <img class="mx-auto h-96 rounded-xl aspect-video object-cover" src={newsItem.news_image} alt="">
            <div class="mx-auto max-w-3xl text-base leading-7 text-gray-700">
                <h3 class="mt-3 text-2xl font-bold leading-tight text-gray-900 group-hover:text-gray-600">
                    {newsItem.news_title}</h3>
                    <p class="font-semibold leading-7 text-gray-500 mb-1">
                  {new Date(newsItem.news_date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                </p>
                
                  <Editor data={newsItem} client:only />
                <button id="save-button">Save</button>

              </div>
        </div>
</Base>
