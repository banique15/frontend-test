---
import { orderEvents, customerInfo } from "./../utils/shopify";
import { EventResult, CustomerResult, OrderResult } from '../utils/schemas';
import { supabase } from '../lib/supabase';
import AppLayout from '../layout/AppLayout.astro';
import { search, subscribe, addmember } from './mailchimp/mcfunctions';
import Toast from './toast.astro';

const { isLoggedIn, email, access_token } = Astro.locals;
const title = 'User Preferences';

export const EventResultSchema = EventResult.array().transform(array =>
  array.map(item => ({
    ...item,
    type: item.type || 'default_type', // Provide a default value if undefined
  }))
);

let email_address = email;
let member = await search(email_address);
let isSubscribe = '';
let member_details = {};

//console.log('search member');
//console.log(member);

if (member.exact_matches.total_items == 0) {
    member = await addmember(email_address);
    isSubscribe = member.status;
    member_details = member;
} else {
    isSubscribe = member.exact_matches.members[0].status;
    member_details = member.exact_matches.members[0];
}

const { data: userInfo, error: errorUserInfo } = await supabase
  .from('profiles')
  .select('*')
  .eq('username', email_address);

if (userInfo[0].mc_subscribe_status == null) {
    const { data, error } = await supabase
      .from('profiles')
      .update({ mc_subscribe_status: isSubscribe })
      .match({ username: email_address });
}

if (Astro.request.method === "POST") {
    try {
        const data = await Astro.request.formData();
        const status = data.get("status");
        subscribe(email_address, status);

        const { data: updatedUser, error: updateError } = await supabase
          .from('profiles')
          .update({ mc_subscribe_status: status })
          .match({ username: email_address });

        if (updateError) {
            console.error('Error updating user in Supabase', updateError);
        } else if (updatedUser) {
            console.log('Successfully updated user subscription status in Supabase', updatedUser);
        }

        isSubscribe = status;
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
}
const customer_id = Astro.cookies.get('sf-customer-id')?.value ?? '0';
const customer_data = await customerInfo({customer_id:customer_id,line_item_limit:20,event_limit:20});


const orders = customer_data.customer.orders.nodes;
const customer = customer_data.customer;
---


<Toast />
{isLoggedIn ? (
  <AppLayout title={title}>
    <div class="flex gap-4 flex-col md:flex-row mt-40 ml-5 mr-5" x-data=`{ activeTab: localStorage.getItem("activeTab")?.length>0?localStorage.getItem("activeTab"):'myAccount', showModal: false, activeOrder: {}  }` x-init="$watch('activeTab', value => localStorage.setItem('activeTab', value))">
        <!-- Sidebar Navigation -->
        <div class="h-full  shadow-md bg-white rounded-xl">
          <div class="p-5">
            <h4 class="text-xl font-medium leading-6 text-gray-900 mb-4">Manage Profile</h4>
            <ul class="mt-0 flex flex-row md:flex-col">
              <li class="flex-auto"><button :class="{'md:text-left text-center w-full bg-green-100 text-green-700 rounded-md px-3 py-2 text-sm font-medium': activeTab === 'myAccount', 'w-full px-3 py-2 block text-gray-800 hover:bg-gray-100 md:text-left text-center text-sm font-medium': activeTab !== 'myAccount'}" @click="activeTab = 'myAccount'">My Account</button></li>
              <li class="flex-auto"><button :class="{'md:text-left text-center w-full bg-green-100 text-green-700 rounded-md px-3 py-2 text-sm font-medium': activeTab === 'billingAddress', 'w-full px-3 py-2 block text-gray-800 hover:bg-gray-100 md:text-left text-center text-sm font-medium': activeTab !== 'billingAddress'}" @click="activeTab = 'billingAddress'">Billing Address</button></li>
              <li class="flex-auto"><button :class="{'md:text-left text-center w-full bg-green-100 text-green-700 rounded-md px-3 py-2 text-sm font-medium': activeTab === 'purchaseHistory', 'w-full px-3 py-2 block text-gray-800 hover:bg-gray-100 md:text-left text-center text-sm font-medium': activeTab !== 'purchaseHistory'}" @click="activeTab = 'purchaseHistory'">Order History</button></li>
            </ul>
          </div>
        </div>
        <!-- Main Content Area -->
        <div class="flex-1">
          <div  class="content-sections-wrapper">
                <!-- My Account Details -->
                <div x-bind:style="activeTab=='myAccount'?'':'display:none'" class="content-section">
                  <div class="overflow-hidden bg-white shadow sm:rounded-lg">
                    <div class="px-4 py-5 sm:px-6">
                      <h3 class="text-lg font-medium leading-6 text-gray-900">My Account</h3>
                      <p class="mt-1 max-w-2xl text-sm text-gray-500">Personal details and preferences.</p>
                    </div>
                    <div class="border-t border-gray-200">
                      <dl>
                        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                          <dt class="text-sm font-medium text-gray-500">Full name</dt>
                          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">{customer.displayName}</dd>
                        </div>
                        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                          <dt class="text-sm font-medium text-gray-500">Email address</dt>
                          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">{customer.email}</dd>
                        </div>
                        <!-- Subscription Button -->
                        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                          <dt class="text-sm font-medium text-gray-500">Subscribe to newsletter</dt>
                          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">
                            <button type="submit" id="toggleButton" 
                            class={isSubscribe=='subscribed'? 
                            'relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 bg-green-600':
                            'relative inline-flex h-6 w-11 items-center rounded-full bg-gray-200 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2' }  
                            role="switch" aria-checked={isSubscribe=='subscribed'?'true':'false'}>
                    
                              <span class="sr-only">Enable notifications</span>
                  
                              <span class={isSubscribe=='subscribed'? 'inline-block h-4 w-4 transform rounded-full bg-white shadow ring-0 transition-transform translate-x-6':
                              'translate-x-1 inline-block h-4 w-4 transform rounded-full bg-white shadow ring-0 transition-transform'}
                              ></span>
                            </button>
                          </dd>
                        </div>
                      </dl>
                    </div>
                  </div>
                </div>
                  <!-- Billing Address -->
                  <div x-bind:style="activeTab=='billingAddress'?'':'display:none'" class="content-section">
                    <div class="overflow-hidden bg-white shadow sm:rounded-lg">
                      <div class="px-4 py-5 sm:px-6">
                        <h3 class="text-lg font-medium leading-6 text-gray-900">Billing Address</h3>
                        <p class="mt-1 max-w-2xl text-sm text-gray-500">Update your billing information.</p>
                      </div>
                      <div class="border-t border-gray-200">
                        <dl>
                          <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Street</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">{customer.addresses[0].address1}</dd>
                          </div>
                          <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">City</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">{customer.addresses[0].city || 'N/A'}</dd>
                          </div>
                          <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">State/Province</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">{customer.addresses[0].province}</dd>
                          </div>
                          <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">ZIP/Postal Code</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">{customer.addresses[0].zip}</dd>
                          </div>
                          <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Country</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">{customer.addresses[0].country}</dd>
                          </div>
                        </dl>
                      </div>
                    </div>
                  </div>



                  <!-- Payment Details -->
                  <!--           
                  <div x-show="activeTab === 'paymentDetails'"  class="content-section">
                    <div class="overflow-hidden bg-white shadow sm:rounded-lg">
                      <div class="px-4 py-5 sm:px-6">
                        <h3 class="text-lg font-medium leading-6 text-gray-900">Payment Details</h3>
                        <p class="mt-1 max-w-2xl text-sm text-gray-500">Manage your payment methods.</p>
                      </div>
                      <div class="border-t border-gray-200">
                        <dl>
                          <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Card Type</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">Visa</dd>
                          </div>
                          <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Card Number</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:col-span-2">**** **** **** 1234</dd>
                          </div> 
                        
                        </dl>
                      </div>
                    </div>
                  </div> -->



                  <!-- Purchase History -->
                  <style>
                    .center-text {
  text-align: center;
}

.modal-overlay {
  z-index: 1000; /* You can increase this value if it's not on top of other elements */
}

.wide-modal {
  position: relative;
  width: 40%;
  max-height: 80vh;
  overflow-y: auto;
}

.scrollable-modal-content {
    max-height: calc(80vh - 64px); /* This is where you adjust the max-height */
    overflow-y: auto;
  }

.close-button {
    position: absolute;
    top: 1rem; /* Adjust this value as needed to move the button up */
    right: 1rem;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 2rem; /* Height of the button */
    width: 2rem; /* Width of the button */
    border-radius: 9999px; /* Makes it perfectly round */
    background-color: #EF4444; /* Tailwind CSS red-500 */
    cursor: pointer;
    z-index: 10; /* Ensure it's above other content */
  }

  .close-button svg {
    height: 1rem; /* Size of the X icon */
    width: 1rem; /* Size of the X icon */
  }

                  </style>
                  <div x-bind:style="activeTab=='purchaseHistory'?'':'display:none'" style="display:none" x-data="orderTimeline" class="content-section">
                      <div class="bg-white shadow sm:rounded-lg">
                        <div class="px-4 py-5 sm:px-6">
                          <h3 class="text-lg font-medium leading-6 text-gray-900">Order History</h3>
                          <p class="mt-1 max-w-2xl text-sm text-gray-500">Review your past purchases.</p>
                        </div>
                        <div class="border-t border-gray-200">
                          <div class="px-4 py-5 sm:grid sm:grid-cols-1 sm:gap-4 sm:px-6 overflow-auto md:overflow-hidden ">
                              <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                  <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider center-text">
                                      Order ID
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider center-text">
                                      Date
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider center-text">
                                      Payment Status
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider center-text">
                                      Status
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider center-text">
                                      Total
                                    </th>
                                  </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                  {orders.map((order:any, index:any) => (
                                    <tr @click={`loadEvent( ${JSON.stringify(orders[index])} ), showModal = true`} class="cursor-pointer">
                                      <td class="px-6 py-4 whitespace-nowrap center-text">
                                        {order.id.replace("gid://shopify/Order/", "")}
                                      </td>
                                      <td class="px-6 py-4 whitespace-nowrap center-text">
                                        {new Date(order.createdAt).toLocaleDateString()}
                                      </td>
                                      <td class="px-6 py-4 whitespace-nowrap center-text">
                                        {order.displayFinancialStatus}
                                      </td>
                                      <td class="px-6 py-4 whitespace-nowrap center-text">
                                        {order.displayFulfillmentStatus}
                                      </td>
                                      <td class="px-6 py-4 whitespace-nowrap center-text">
                                        ${order.totalPrice}
                                      </td>
                                    </tr>
                                  ))}
                                </tbody>
                              </table>
                            </div>
                          </div>
                        </div>
                      <div>
                      <div x-show="showModal" class="modal-overlay fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
                        <div class="bg-white p-6 rounded-lg shadow-lg wide-modal">
                          <div class="flex justify-between items-start">
      <h4 class="font-bold mb-4">Order Activity (ID: <span x-text="orderID"></span>)</h4>
      <button @click="showModal = false" class="close-button">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

                              <!-- Order activity timeline -->
                              
                              <div class="scrollable-modal-content">
                              <div class="border-l-2 border-gray-200">
                                <template x-for="event in eventsData" :key="event.id">
                                    <div class="pl-4 pb-4">
                                        <div class="flex items-center">
                                            <div class="bg-green-500 rounded-full h-4 w-4"></div>
                                            <div x-html="event.message ? event.message : 'No message provided'" class="ml-2 text-sm"></div>
                                        </div>
                                        <div class="text-xs text-gray-600 mt-1" x-text="new Date(event.createdAt).toLocaleString()"></div>
                                    </div>
                                </template>
                              </div>
</div>
                              <!-- Close button -->
                             
                      </div>
                  </div>

                  
                  
              </div>
            </div>
          </div>
        </div>
      </div>
  </AppLayout>
  <script>


    document.addEventListener('alpine:init', () => {
        Alpine.data('orderTimeline', () => ({
            showModal: false,
            activeOrder: {},
            orderID: '',
            eventsData: [],
            loadEvent(data){
              this.eventsData = data.events.nodes;
              this.orderID = data.id.replace("gid://shopify/Order/", "");
            }
        }));
    });
  </script>
) : (
  <script>window.location.href = '/login';</script>
)}


